{"ast":null,"code":"import*as Redux from'redux';import{apiMiddleware as ReduxApiMiddleware}from'redux-api-middleware';import ImmutableStateMiddleware from'redux-immutable-state-invariant';import ReduxPromise from'redux-promise';import ReduxThunk from'redux-thunk';import UnhandledActionMiddleware from'redux-unhandled-action';var middleware=[ReduxThunk,ReduxPromise,ReduxApiMiddleware];if(process.env.NODE_ENV!=='production'){middleware.push(ImmutableStateMiddleware());middleware.push(UnhandledActionMiddleware());}var composeEnhancers=window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']||Redux.compose;var enhancer=composeEnhancers(Redux.applyMiddleware.apply(Redux,middleware));var reducer=function reducer(){return undefined;};export default Redux.createStore(reducer,enhancer);","map":{"version":3,"sources":["store.ts"],"names":[],"mappings":"AAAA,MAAO,GAAK,CAAA,KAAZ,KAAuB,OAAvB,CACA,OAAS,aAAa,GAAI,CAAA,kBAA1B,KAAoD,sBAApD,CACA,MAAO,CAAA,wBAAP,KAAqC,iCAArC,CACA,MAAO,CAAA,YAAP,KAAyB,eAAzB,CACA,MAAO,CAAA,UAAP,KAAuB,aAAvB,CACA,MAAO,CAAA,yBAAP,KAAsC,wBAAtC,CACA,GAAM,CAAA,UAAU,CAAG,CACf,UADe,CAEf,YAFe,CAGf,kBAHe,CAAnB,CAKA,GAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,GAAyB,YAA7B,CAA2C,CAEvC,UAAU,CAAC,IAAX,CAAgB,wBAAwB,EAAxC,EAEA,UAAU,CAAC,IAAX,CAAgB,yBAAyB,EAAzC,EACH,CACD,GAAM,CAAA,gBAAgB,CAAG,MAAM,CAAC,sCAAD,CAAN,EAA0E,KAAK,CAAC,OAAzG,CACA,GAAM,CAAA,QAAQ,CAAG,gBAAgB,CAAC,KAAK,CAAC,eAAN,OAAA,KAAK,CAAoB,UAApB,CAAN,CAAjC,CACA,GAAM,CAAA,OAAO,CAAG,QAAV,CAAA,OAAU,SAAM,CAAA,SAAN,EAAhB,CACA,cAAe,CAAA,KAAK,CAAC,WAAN,CAAkB,OAAlB,CAA2B,QAA3B,CAAf","sourceRoot":"","sourcesContent":["import * as Redux from 'redux';\r\nimport { apiMiddleware as ReduxApiMiddleware } from 'redux-api-middleware';\r\nimport ImmutableStateMiddleware from 'redux-immutable-state-invariant';\r\nimport ReduxPromise from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport UnhandledActionMiddleware from 'redux-unhandled-action';\r\nconst middleware = [\r\n    ReduxThunk,\r\n    ReduxPromise,\r\n    ReduxApiMiddleware,\r\n];\r\nif (process.env.NODE_ENV !== 'production') {\r\n    middleware.push(ImmutableStateMiddleware());\r\n    middleware.push(UnhandledActionMiddleware());\r\n}\r\nconst composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] || Redux.compose;\r\nconst enhancer = composeEnhancers(Redux.applyMiddleware(...middleware));\r\nconst reducer = () => undefined;\r\nexport default Redux.createStore(reducer, enhancer);\r\n//# sourceMappingURL=store.js.map"]},"metadata":{},"sourceType":"module"}